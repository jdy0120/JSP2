자주 발생하는 오류 형태
1. 오류가 발생하지 않고 다운로드 되는 경우
 - 브라우저에서 실행할 수 없는 형태의 파일이나 파일형식으로 실행되었을 경우 다운로드 됨
처리법 : 확장자나 파일 형식을 지정하는 곳에 오타를 검사

JSP(Java Server Page)
 - 기본적으로 자바로 작업하는 웹프로그래밍은 서블릿으로 작업되나 화면에 보여주는 부분까지 서블릿을 하면 너무 복잡해
 지기 때문에 화면 노출을 쉽게 해주는 JSP가 나옴
 - 서블릿과 다르게 확장자가 .jsp로 이루어져 있고, 중간 중간에 html,css,js등의 코드를 삽입할 수 있음(ASP, PHP와 동일한 방식)
 - 일반적으로 디자인 관련 작업에서 많이 사용됨
 - 단, JSP로 작업한 파일은 다시 서블릿으로 전환되어 컴파일 후 실행됨

기본적으로 섭르릿과 JSP 모두 단독으로 사이트를 제작할 수도 있음
 - 다만 효율적인 작업을 위해 두 기능을 섞어서 사용하는 것이 보통

클라이언트가 데이터를 서버로 전송하는 방식
 - get : URL의 뒤에 '?'를 붙인 후 원하는 이름으로 지정하여 보내는 방식
    예) localhost?변수명1=값1&변수명2=값2& ...
    주소창에 직접 URL을 입력해도 get방식으로 취급함(뒤에 쿼리스트링이 없어도)
    장점 : 사용이 간편하고, 속도가 비교적 빠름
    단점 : 보안에 취약하며, 많은 양의 데이터를 보낼 수 없음
 - post : 폼의 method속성을 post로 지정하여 폼안의 컨트롤들의 값을 보내는 방식
    장점 : 보안에 강하며, 많은 양의 데이터를 보낼 수 있음
    단점 : 반드시 폼을 이용해야 하며, 속도가 비교적 느림

클라이언트가 보낸 데이터를 받는 방법
 - 클라이언트가 보낸 데이터는 무조건 String으로 받아짐
      기본자료형으로 변환하여 사용하기도 함(Wrapper클래스의 valueOf()메소드를 이용)
      예) Integer.valueOf(정수로 변환할 데이터)
      다만, 예전 방식인 Integer.parseInt(정수로 변환할 데이터)를 더 많이 사용함

 - get방식으로 보내면 doGet()메소드에서, post방식으로 보내면 doPost()메소드에서 받아야 함
      서블릿에서의 데이터 받는 방식

 - 받는 방식
하나의 데이터를 받는 방식
String 변수명 = request.getParameter(String 컨트롤명);

여러개의 데이터를 받는 방식(단, 동일한 이름이어야 함)
String[] 배열명 = request.getParameterValues(String 컨트롤명);
      여러개의 컨트롤을 동일한 이름으로 지정할 경우 받을 때 하나의 배열로 받을 수 있음
